/****************************************************
 * 关于氨基酸的一些参数
 * 氨基酸的三字母名称,单字母名称,原子名称,半径
 * 氨基酸的经验的主链和侧链的半径等
 * 注意:氨基酸的三字母名称和单字母名称可以互相转换
 * 使用residulename321,residulename123
 * 各种参数都是使用氨基酸的单字母名称的字母表顺序
 * 排列的，把氨基酸的名称转换成参数ID使用Rname2ID
 * 原子类似，这里使用二分查找法，速度很快
 **************************************************/
#pragma once
#include <string>
#include <vector>

using namespace std;

#define NUM_RESIDULE_TYPE 23		//氨基酸类型总数
#define NUM_ATOM_TYPE 39			//原子类型总数
//const char rname_three_rank[NUM_RESIDULE_TYPE][4]={//排序的三字母氨基酸名称
//"ALA","ARG","ASN","ASP","CYS", // ARNDC
//"GLN","GLU","GLY","HIS","ILE", // QEGHI
//"LEU","LYS","MET","PHE","PRO", // LKMFP
//"SER","THR","TRP","TYR","VAL", // STWYV
//"ASX","GLX","UNK"}; //// BZU,  ASP/ASN,  GLU/GLN
const char rname_three_rank[NUM_RESIDULE_TYPE][4]={//排序的三字母氨基酸名称
"ALA","ARG","ASN","ASP","ASX","CYS", // ARNDBC
"GLN","GLU","GLX","GLY","HIS","ILE", // QEZGHI
"LEU","LYS","MET","PHE","PRO", // LKMFP
"SER","THR","TRP","TYR","UNK","VAL" // STWYUV
}; //// ,  
const char three2one[NUM_RESIDULE_TYPE+1]="ARNDBCQEZGHILKMFPSTWYUV";//相对于排序三字母的单字母名称

const char rname_one_rank[NUM_RESIDULE_TYPE+1]="ABCDEFGHIKLMNPQRSTUVWYZ";//排序的单字母氨基酸名称
const char rname_one_rank20[21]="ACDEFGHIKLMNPQRSTVWY";//排序的单字母氨基酸名称，仅仅是20个标准的氨基酸
    //ACDEFGHIKLMNPQRSTVWY
	//01234567890123456789
	//                0,1, 2,3,4, 5, 6,7,8,9,0,1,2,3, 4, 5, 6, 7, 8, ,9 
	//                A,R ,N, D,C,Q ,E,G,H,I,L,K,M ,F,P ,S ,T ,W ,Y ,V
const int aapsi2rank[20]={0,14,11,2,1,13,3,5,6,7,9,8,10,4,12,15,16,18,19,17};//psi-blast的氨基酸序号对应的排序序号
const int aarank2psi[20]={0,4,3,6,13,7,8,9,11,10,12,2,14,5,1,15,16,19,17,18};//排序的氨基酸序号对应的psi-blast的序号
const char one2three[NUM_RESIDULE_TYPE][4]={							//相对于排序单字母的三字母名称
	"ALA","ASX","CYS","ASP","GLU",	//ABCDE
	"PHE","GLY","HIS","ILE","LYS",	//FGHIK
	"LEU","MET","ASN","PRO","GLN",	//LMNPQ
	"ARG","SER","THR","UNK","VAL",	//RSTUV
	"TRP","TYR","GLX"};				//WYZ

static const char atom_name_rank[NUM_ATOM_TYPE][4]={					//原子名称
    "C","CA","CB","CD","CD1","CD2","CE","CE1","CE2","CE3",
    "CG","CG1","CG2","CH2","CZ","CZ2","CZ3","N","ND1",
    "ND2","NE","NE1","NE2","NH1","NH2","NZ","O","O1","O2",
    "OD1","OD2","OE1","OE2","OG","OG1","OH","OXT","SD","SG"};

static double const SAS_ARADIUS[NUM_RESIDULE_TYPE][NUM_ATOM_TYPE]={//不同氨基酸中每个原子的半径,按照单字母的氨基酸名称和原子顺序给出              
		{1.72,1.80,2.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*A*/
        {1.72,1.80,1.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.72,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*B*/
		{1.72,1.80,1.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,1.80}, /*C*/
		{1.72,1.80,1.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.72,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*D*/
		{1.72,1.80,1.90,1.72,0.00,0.00,0.00,0.00,0.00,0.00,1.90,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,1.50,1.50,0.00,0.00,0.00,1.50,0.00,0.00}, /*E*/
		{1.72,1.80,1.90,0.00,1.80,1.80,0.00,1.80,1.80,0.00,1.72,0.00,0.00,0.00,1.80,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*F*/
		{1.90,1.80,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*G*/
		{1.72,1.80,1.90,0.00,0.00,1.80,0.00,1.80,0.00,0.00,1.72,0.00,0.00,0.00,0.00,0.00,0.00,1.55,1.55,0.00,0.00,0.00,1.55,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*H*/
        {1.72,1.80,1.80,2.00,2.00,0.00,0.00,0.00,0.00,0.00,0.00,1.90,2.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*I*/
		{1.72,1.80,1.90,1.90,0.00,0.00,1.90,0.00,0.00,0.00,1.90,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.55,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*K*/
        {1.72,1.80,1.90,0.00,2.00,2.00,0.00,0.00,0.00,0.00,1.80,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*L*/        
        {1.72,1.80,1.90,0.00,0.00,0.00,2.00,0.00,0.00,0.00,1.90,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.80,0.00}, /*M*/
		{1.72,1.80,1.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.72,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*N*/
		{1.72,1.80,1.90,1.90,0.00,0.00,0.00,0.00,0.00,0.00,1.90,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*P*/
		{1.72,1.80,1.90,1.72,0.00,0.00,0.00,0.00,0.00,0.00,1.90,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,1.50,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*Q*/
		{1.72,1.80,1.90,1.90,0.00,0.00,0.00,0.00,0.00,0.00,1.90,0.00,0.00,0.00,1.72,0.00,0.00,1.55,0.00,0.00,1.55,0.00,0.00,1.55,1.55,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*R*/                                        
        {1.72,1.80,1.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,1.50,0.00,0.00,1.50,0.00,0.00}, /*S*/
        {1.72,1.80,1.80,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,2.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,1.50,0.00,1.50,0.00,0.00}, /*T*/
		{0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00}, /*U*/
		{1.72,1.80,1.80,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,2.00,2.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00},  /*V*/
        {1.72,1.80,1.90,0.00,1.80,1.72,0.00,0.00,1.72,1.80,1.72,0.00,0.00,1.80,0.00,1.80,1.80,1.55,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,0.00,0.00}, /*W*/
        {1.72,1.80,1.90,0.00,1.80,1.80,0.00,1.80,1.80,0.00,1.72,0.00,0.00,0.00,1.72,0.00,0.00,1.55,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,0.00,0.00,0.00,0.00,1.50,1.50,0.00,0.00}, /*Y*/        
		{1.72,1.80,1.90,1.72,0.00,0.00,0.00,0.00,0.00,0.00,1.90,0.00,0.00,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,0.00,1.55,0.00,0.00,0.00,1.50,1.50,1.50,0.00,0.00,1.50,1.50,0.00,0.00,0.00,1.50,0.00,0.00} /*Z*/			       
        
};
static int const Atomtype40[20][NUM_ATOM_TYPE]={//不同氨基酸中每个原子对应的原子类型号,原子类型共40个,见文献(Melo and Feytmans, 1997),注意其中的氨基酸顺序是标准20个氨基酸的顺序
   /* C,CA,CB,CD,CD1CD2CE,CE1CE2CE3CG,CG1CG2CH2CZ,CZ2CZ3 N,ND1ND2NE,NE1NE2NH1NH2NZ, O,O1,O2,OD1OD2OE1OE2OG,OG1OH,OXTSD,SG*/
	{ 4, 1, 6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*A ALA 5*/
	{ 4, 1,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19},/*C CYS 6*/
	{ 4, 1, 8,-1,-1,-1,-1,-1,-1,-1,27,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,28,28,-1,-1,-1,-1,-1,-1,-1,-1},/*D ASP 8*/
	{ 4, 1, 8,27,-1,-1,-1,-1,-1,-1, 8,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,28,28,-1,-1,-1,-1,-1,-1},/*E GLU 9*/
	{ 4, 1, 8,-1,12,12,-1,12,12,-1,11,-1,-1,-1,12,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*F PHE 11*/
	{ 4, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*G GLY 4*/
	{ 4, 1, 8,-1,-1,24,-1,26,-1,-1,23,-1,-1,-1,-1,-1,-1, 3,38,-1,-1,-1,25,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*H HIS 10*/
	{ 4, 1, 7,-1, 6,-1,-1,-1,-1,-1,-1, 8, 6,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*I ILE 8*/
	{ 4, 1, 8, 8,-1,-1,35,-1,-1,-1, 8,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,20, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*K LYS 9*/
	{ 4, 1, 8,-1, 6, 6,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*L LEU 8*/
	{ 4, 1, 8,-1,-1,-1,30,-1,-1,-1,29,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 9,-1},/*M MET 8*/
	{ 4, 1, 8,-1,-1,-1,-1,-1,-1,-1,33,-1,-1,-1,-1,-1,-1, 3,-1,18,-1,-1,-1,-1,-1,-1, 5,-1,-1,34,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*N ASN 8*/
	{ 4, 1, 8,32,-1,-1,-1,-1,-1,-1, 8,-1,-1,-1,-1,-1,-1,10,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*P PRO 7*/
	{ 4, 1, 8,33,-1,-1,-1,-1,-1,-1, 8,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,18,-1,-1,-1, 5,-1,-1,-1,-1,34,-1,-1,-1,-1,-1,-1,-1},/*Q GLN 9*/
	{ 4, 1, 8,37,-1,-1,-1,-1,-1,-1, 8,-1,-1,-1,21,-1,-1, 3,-1,-1,36,-1,-1,22,22,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*R ARG 11*/
	{ 4, 1,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,16,-1,-1,-1,-1,-1},/*S SER 6*/
	{ 4, 1,17,-1,-1,-1,-1,-1,-1,-1,-1,-1, 6,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,16,-1,-1,-1,-1},/*T THR 7G*/
	{ 4, 1, 7,-1,-1,-1,-1,-1,-1,-1,-1, 6, 6,-1,-1,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*V VAL 7*/
	{ 4, 1, 8,-1,24,11,-1,-1,14,12,13,-1,-1,12,12,12,12, 3,-1,-1,-1,39,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},/*W TRP 14 CZ2=CZ3*/
	{ 4, 1, 8,-1,12,12,-1,12,12,-1,11,-1,-1,-1,31,-1,-1, 3,-1,-1,-1,-1,-1,-1,-1,-1, 5,-1,-1,-1,-1,-1,-1,-1,-1,40,-1,-1,-1},/*Y TYR 12*/
	/*原子总数167,由于坐标文件中部分原子给出的名称不标准(给出的是其它的名称),每个氨基酸后面的等式中前一个原子实际上是不存在的,等好后面的原子是实际原子*/			
};
//const float AA_SIZE[23]={
//1.702, 3.203, 2.671, 2.686, 2.490,// ARNDC
//2.871, 2.884, 0.690, 2.985, 2.655,// QEGHI
//2.655, 2.871, 2.910, 3.104, 2.379,// LKMFP
//2.168, 2.454, 3.495, 3.276, 2.417,// STWYV
//3.686, 2.871, 2.624}; // BZU
const double AA_SideR[23]={
	1.702,3.686,2.490,2.686,2.884,//ABCDE
	3.104,0.690,2.985,2.655,2.871,//FGHIK
	2.655,2.910,2.671,2.379,2.871,//LMNPQ
	3.203,2.168,2.454,2.624,2.417,//RSTUV
	3.495,3.276,2.871};//WYZ



/***************************************************
 * 把三字母的氨基酸名称转换成单字母的
 * 名称长度不是3时返回U，未找到匹配的氨基酸也返回U
 * 使用二份查找，速度很快
 ***************************************************/
char residulename321(const char *);

/***************************************************
 * 把单字母的氨基酸名称转换成三字母的
 * 找到匹配的氨基酸也返回U
 * 使用二份查找，速度很快
 ***************************************************/
void residulename123(const char,char *);

/*************************************************
 * 把氨基酸名称转换成参数列表中的序号
 ************************************************/
int Rname2ID(const char c);//单字母氨基酸名称转换成ID，返回值为0-22,共23个氨基酸
int Rname2ID(const char* three);//三字母氨基酸名称转换成ID，返回值为0-22,共23个氨基酸
int Rname2ID20(const char c);//单字母氨基酸名称转换成ID，返回值为-1,0-20,共20个氨基酸,-1表示非标准氨基酸
int Rname2ID20(const char* three);//三字母氨基酸名称转换成ID，返回值为-1,0-20,共20个氨基酸,-1表示非标准氨基酸

/****************************************************
 * 把原子名称转换成参数列表中的序号
 ***************************************************/
 int Atomname2ID(const char* atom);

/****************************************************
 * 转换成大写
 ***************************************************/
void Upper(string& str);


/************************************************************
 * 二份法在threename的第l和r个字符串中中,查找指定的字符串str,
 * 找到返回其下标，否则返回-1
 ***********************************************************/
int BinarySearchStr(const char threename[][4],const char *str,int l,int r);
/************************************************************
 * 二份法在str的第l和r个字符中,查找指定的字符str,
 * 找到返回其下标，否则返回-1
 ***********************************************************/
int BinarySearchChar(const char *str,const char c,int l,int r);
//#endif